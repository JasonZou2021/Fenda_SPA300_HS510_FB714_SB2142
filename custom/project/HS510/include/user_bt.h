#ifndef __BT_USER_H__
#define __BT_USER_H__
#include "qp/qf_sync.h"
#include "qp/qp_pub.h"
#include "qp/qep.h"
#define LOG_MODULE_ID  ID_APUSR
#define LOG_EXTRA_STR  "[BT]"
#include "log_utils.h"
#include "bt_common.h"


typedef enum BT_APPEVTSIG
{
	BT_APP_READY_OK_SIG,
	BT_APP_UNREADY_OK_SIG,
	BT_APP_TWS_MODE_CHANGED_SIG,
	BT_APP_SEARCH_RESULT_SIG,
	BT_APP_SEARCH_FINISH_SIG,
	BT_APP_ACL_CONNECT_SIG,
	BT_APP_PAIRING_ING_SIG,//REQ
	BT_APP_PAIRED_OK_SIG,
	BT_APP_UNPAIRED_OK_SIG,
	BT_APP_ACL_DISCONNECT_OK_SIG,
	//BT_APP_REMOTE_DEVICE_NAME_SIG,

	BT_APP_AVDP_SIG,//A2DP && AVRCP
	BT_APP_AVDP_CONNECT_ING_SIG = BT_APP_AVDP_SIG,
	BT_APP_AVDP_CONNECT_SUCCESS_SIG,
	BT_APP_AVDP_DISCONNECT_ING_SIG,
	BT_APP_AVDP_DISCONNECT_SUCCESS_SIG,
	BT_APP_AVDP_MAX_SIG = BT_APP_AVDP_DISCONNECT_SUCCESS_SIG,

	BT_APP_SPP_SIG,
	BT_APP_SPP_CONNECT_SUCCESS_SIG = BT_APP_SPP_SIG,
	BT_APP_SPP_DISCONNECT_SUCCESS_SIG,
	BT_APP_SPP_MAX_SIG = BT_APP_SPP_DISCONNECT_SUCCESS_SIG,

	BT_APP_UPGRADE_REQ_SIG,
	BT_APP_RECV_DATA_SIG,

	BT_APP_CTR_REQ_SIG,
	BT_APP_VOLUME_SET_REQ_SIG = BT_APP_CTR_REQ_SIG,
	BT_APP_VOLUME_REG_REQ_SIG,
	BT_APP_PLAY_REQ_SIG,
	BT_APP_PAUSE_REQ_SIG,
	BT_APP_NEXT_PLAY_REQ_SIG,
	BT_APP_PREV_PLAY_REQ_SIG,
	BT_APP_CTR_REQ_MAX_SIG = BT_APP_PREV_PLAY_REQ_SIG,

	BT_APP_SOURCE_STATE_UPDATE_SIG,

    BT_APP_REMOTE_DEVICE_INFO_SIG,
	BT_APP_MUSIC_PLAY_STATUS_SIG,
	BT_APP_MUSIC_CODEC_INFO_SIG,
	BT_APP_MUSIC_INFO_SIG,
	BT_APP_REMOTE_DEVICE_RSSI_SIG,

	BT_APP_MSG_MAX,
} BT_APP_EVTSIG_e;


typedef struct
{
	QEvent super;
	BT_APP_EVTSIG_e type;
	//QActive* who;
	void *pdata;
	int  len;
} BtAppCBKEvt;


int UserBtCbkRegister(QActive *pstDesActive);
int UserBtCbkDelRegister(QActive *pstDesActive);


#endif //__BT_USER_H__

