#ifndef __BT_CMD_H__
#define __BT_CMD_H__

#define UART_BUF_MAX	128
#define BT_PACKET_MAX	8


#define ATS2819_PACKET_MAX	8

enum
{
	RECV_RX_HD_H,
	RECV_RX_LEN,
	RECV_RX_FUNC,
	RECV_RX_CMD,
	RECV_RX_DAT,
	RECV_RX_CHK,
};	


/*SPA300到蓝牙ATS2819的数据包*/
#define ATS2819_SEND_HEAD   0x82
/*蓝牙ATS2819到SPA300的数据包*/
#define ATS2819_RECV_HEAD   0x28

/*SPA300跟ATS2819的串口通信协议指令格式*/
typedef struct
{
     BYTE head;							/*一字节的数据包头*/
     BYTE len;							/*一字节的数据包大小*/
     BYTE func;							/*一字节的指令功能*/
     BYTE cmd;							/*一字节的子指令号*/
     BYTE data[ATS2819_PACKET_MAX];		/*一字节的数据大小*/
     BYTE chks;							/*一字节的数据包校验和*/
	 
}ATS2819_PACKET, *pATS2819_PACKET;


enum
{
	BT_CMD_CTL = 0X81,			/*SPA300发出控制命令*/
	BT_CMD_CHECK = 0X82,		/*SPA300发出查询命令*/
	BT_CMD_ACK = 0X8F,			/*SPA300回应ATS2819查询命令*/
};


enum
{
	BT_CTL_PLAY = 0X01,
	BT_CTL_PAUSE,
	BT_CTL_NEXT,
	BT_CTL_PREV,
	BT_CTL_VOL_UP,
	BT_CTL_VOL_DN,
	BT_CTL_VOL_SET,
	BT_CTL_MUTE,
	BT_CTL_DEMUTE,
	BT_CTL_SW_SRC,
	BT_CTL_SRC_BT,
	BT_CTL_OPT,
	BT_CTL_AUX,
	BT_CTL_HDMI,
	BT_CTL_BASS_UP,
	BT_CTL_BASS_DN,
	BT_CTL_BASS_SET,
	BT_CTL_SW_I2S_RX,
	BT_CTL_RECONNECT,
	BT_CTL_RESET,
	BT_CTL_DISCCONECT = 0X15,
	BT_CTL_POWER_OFF,
	BT_CTL_POWER_ON,
	BT_CTL_PLAY_PAUSE,
	BT_CTL_SUBWOOFER_PAIR,
	BT_CTL_HINT_STATUS = 0X20,
	BT_CTL_PD_TEST, 
	BT_CTL_EQ,
	BT_CTL_EQ_BASS, 
};

enum
{
	BT_CHK_PLAY_STATUS = 1,
	BT_CHK_VOL,
	BT_CHK_VERSION,
};

enum
{
	BT_ACK_SRC = 1,
	BT_ACK_VOL,
	BT_ACK_MUTE,
	BT_ACK_PLAY,

// FACTORY TEST CMD
	BT_ACK_DSP_VER = 0X10,
	BT_ACK_KEY,
	BT_ACK_VFD,
};



enum
{
	BT_RECV_CMD = 0X21,
	BT_RECV_CHECK,
	BT_RECV_ACK = 0x2f,
};


enum
{
	BT_RECV_POWER_ON,
	BT_RECV_POWER_OFF,
	BT_RECV_CONNECTED,
	BT_RECV_PAIRING,
	BT_RECV_FARAWAY_RECONNECT,
	BT_RECV_RECONNECT,
	BT_RECV_VOL_UP,
	BT_RECV_VOL_DN,
	BT_RECV_VOL_SET,
	BT_RECV_ENTER_REP,
	BT_RECV_EXIT_REP,	
	BT_RECV_AUX,
	BT_RECV_BT,
	BT_RECV_WOOFER,
	BT_RECV_PLAY,

	BT_RECV_PERCENT=0X10,

	BT_RECV_BTADDR=0XAA,
};

enum
{
	BT_RECV_CHK_SRC=1,
	BT_RECV_CHK_VOL,
	BT_RECV_CHK_MUTE,
	BT_RECV_CHK_PLAY,

// FACTORY TEST CMD
	BT_RECV_CHK_DSP_VER = 0X10,
	BT_RECV_CHK_KEY,
	BT_RECV_CHK_VFD,
	BT_RECV_CHK_TEST_EXIT
};

enum
{
	BT_RECV_ACK_PLAY=1,
	BT_RECV_ACK_VOL,
	BT_RECV_ACK_VERSION,
};

enum
{
	BT_RECV_WOOFER_START,
	BT_RECV_WOOFER_TIMEOUT,
	BT_RECV_WOOFER_CONNECTED,
	BT_RECV_WOOFER_DISCONNECTED,
};

#if 1 //def SB714
enum
{
	BT_MODE_BT,	
	BT_MODE_ARC,	
	BT_MODE_AUX,
	BT_MODE_OPT,
	BT_MODE_HDMI,
	BT_MODE_USB,
	BT_MODE_USC,
	BT_MODE_COAX,
};
#else
enum
{
	BT_MODE_BT,	
	BT_MODE_ARC,	
	BT_MODE_AUX,
	BT_MODE_OPT,
	BT_MODE_HDMI,
	BT_MODE_USB,
	BT_MODE_COAX,
};
#endif

typedef enum
{
	EXTERNALMCU_PACKET_QUEUE_SEND,
	EXTERNALMCU_PACKET_DIRECT_SEND,
    EXTERNALMCU_PACKET_SEND_MAX

}EXTERNALMCU_PACKET_SEND_MODE;


#endif

