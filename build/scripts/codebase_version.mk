sinclude $(TOP)/build/scripts/config.mk

CODEBASE_VERSION_HEADER = $(OUT_SDK_INC_DIR)/common/codebase_version.h
CODEBASE_HEADER_DIR = $(dir $(CODEBASE_VERSION_HEADER))
GIT_VERSION :=
GIT_BRANCH  :=
GIT_VERSION_INH :=
GIT_BRANCH_INH  :=
RLS_BOARD :=
RLS_PROJECT :=
GIT_CMD := $(shell which git &> /dev/null; echo $$?)


# codebase version
ifneq ($(wildcard $(CODEBASE_VERSION_HEADER)), )
	GIT_VERSION_INH = $(shell $(SED) -n "/CODE_VERSION/s/.*\"\(.*\)\".*/\1/gp" $(CODEBASE_VERSION_HEADER))
	GIT_BRANCH_INH  = $(shell $(SED) -n "/CURRENT_BRANCH/s/.*\"\(.*\)\".*/\1/gp" $(CODEBASE_VERSION_HEADER))
	RLS_BOARD       = $(shell $(SED) -n "/RLS_BOARD/s/.*\"\(.*\)\".*/\1/gp" $(CODEBASE_VERSION_HEADER))
	RLS_PROJECT     = $(shell $(SED) -n "/RLS_PROJECT/s/.*\"\(.*\)\".*/\1/gp" $(CODEBASE_VERSION_HEADER))
endif

ifneq ($(GIT_CMD), 0)
	GIT_VERSION = $(GIT_VERSION_INH)
	GIT_BRANCH  = $(GIT_BRANCH_INH)
else ifneq ($(wildcard $(TOP)/.git), )
	GIT_VERSION = $(shell git log --abbrev-commit -n1 --pretty=format:"%h")
	GIT_BRANCH  = $(shell git rev-parse --abbrev-ref HEAD)
else
	GIT_VERSION = $(GIT_VERSION_INH)
	GIT_BRANCH  = $(GIT_BRANCH_INH)
endif

ifeq ($(GIT_VERSION)_$(GIT_VERSION_INH), _)
$(warning Code Version info Not Found)
	GIT_VERSION := XXXXXXX
	GIT_BRANCH  := XXXXXXX
endif

define gen_git_codebase_ver
	$(MKDIR) -p $(CODEBASE_HEADER_DIR)
	$(ECHO) "#ifndef __COMMON_CODEBASE_VERSION__" > $(1)
	$(ECHO) "#define __COMMON_CODEBASE_VERSION__" >> $(1)
	$(ECHO) >> $(1)
	$(ECHO) "/* This file is generated by script. */" >> $(1)
	$(ECHO) "#define CODE_VERSION     \"$(2)\"" >> $(1)
	$(ECHO) "#define CURRENT_BRANCH   \"$(3)\"" >> $(1)
	$(ECHO) "#define RLS_BOARD \"$(4)\"" >> $(1)
	$(ECHO) "#define RLS_PROJECT \"$(5)\"" >> $(1)
	$(ECHO) >> $(1)
	$(ECHO) "#endif /* __COMMON_CODEBASE_VERSION__ */" >> $(1)
	$(ECHO) >> $(1)
endef

.PHONY: gitver

all: gitver

gitver:
ifneq ($(GIT_VERSION), $(GIT_VERSION_INH))
	$(call gen_git_codebase_ver,$(CODEBASE_VERSION_HEADER),$(GIT_VERSION),$(GIT_BRANCH),$(BOARD_NAME),$(SYS_PROJECT))
else ifeq ($(RLS_BOARD),)
	$(call gen_git_codebase_ver,$(CODEBASE_VERSION_HEADER),$(GIT_VERSION),$(GIT_BRANCH),$(BOARD_NAME),$(SYS_PROJECT))
else ifeq ($(RLS_PROJECT),)
	$(call gen_git_codebase_ver,$(CODEBASE_VERSION_HEADER),$(GIT_VERSION),$(GIT_BRANCH),$(BOARD_NAME),$(SYS_PROJECT))
endif
	@$(ECHO) "GIT version: $(GIT_VERSION) @ $(GIT_BRANCH) in $(subst $(TOP)/,,$(CODEBASE_VERSION_HEADER))"

